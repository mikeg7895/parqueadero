// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Parqueadero.Models;

#nullable disable

namespace Parqueadero.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250508043727_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Parqueadero.Models.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nit")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("Parqueadero.Models.Parqueadero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Latitud")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Longitud")
                        .HasColumnType("numeric");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Parqueaderos");
                });

            modelBuilder.Entity("Parqueadero.Models.Piso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Numero")
                        .HasColumnType("integer");

                    b.Property<int>("ParqueaderoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ParqueaderoId");

                    b.ToTable("Pisos");
                });

            modelBuilder.Entity("Parqueadero.Models.Tarifa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ParqueaderoId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoVehiculo")
                        .HasColumnType("integer");

                    b.Property<decimal>("ValorPorHora")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("ParqueaderoId");

                    b.ToTable("Tarifa");
                });

            modelBuilder.Entity("Parqueadero.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ParqueaderoId")
                        .HasColumnType("integer");

                    b.Property<int>("Rol")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ParqueaderoId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Parqueadero.Models.Zona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Estado")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PisoId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoVehiculo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PisoId");

                    b.ToTable("Zonas");
                });

            modelBuilder.Entity("Parqueadero.Models.Parqueadero", b =>
                {
                    b.HasOne("Parqueadero.Models.Empresa", "Empresa")
                        .WithMany("Parqueaderos")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Parqueadero.Models.Piso", b =>
                {
                    b.HasOne("Parqueadero.Models.Parqueadero", null)
                        .WithMany("Pisos")
                        .HasForeignKey("ParqueaderoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Parqueadero.Models.Tarifa", b =>
                {
                    b.HasOne("Parqueadero.Models.Parqueadero", null)
                        .WithMany("Tarifas")
                        .HasForeignKey("ParqueaderoId");
                });

            modelBuilder.Entity("Parqueadero.Models.Usuario", b =>
                {
                    b.HasOne("Parqueadero.Models.Parqueadero", "Parqueadero")
                        .WithMany("Trabajadores")
                        .HasForeignKey("ParqueaderoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parqueadero");
                });

            modelBuilder.Entity("Parqueadero.Models.Zona", b =>
                {
                    b.HasOne("Parqueadero.Models.Piso", "Piso")
                        .WithMany("Zonas")
                        .HasForeignKey("PisoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Piso");
                });

            modelBuilder.Entity("Parqueadero.Models.Empresa", b =>
                {
                    b.Navigation("Parqueaderos");
                });

            modelBuilder.Entity("Parqueadero.Models.Parqueadero", b =>
                {
                    b.Navigation("Pisos");

                    b.Navigation("Tarifas");

                    b.Navigation("Trabajadores");
                });

            modelBuilder.Entity("Parqueadero.Models.Piso", b =>
                {
                    b.Navigation("Zonas");
                });
#pragma warning restore 612, 618
        }
    }
}
