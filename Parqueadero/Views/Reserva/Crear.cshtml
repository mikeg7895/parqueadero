@{
    ViewData["Title"] = "Crear Reserva";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3 text-gray-800">Crear Reserva</h1>
        <a asp-action="Index" class="btn btn-secondary">
            <i class="fas fa-arrow-left"></i> Volver
        </a>
    </div>

    <div class="card shadow mb-4">
        <div class="card-body">
            <form id="formCrearReserva">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="parqueaderoId">Parqueadero</label>
                            <select class="form-control" id="parqueaderoId" required>
                                <option value="">Seleccione un parqueadero</option>
                            </select>
                            <div class="invalid-feedback">El parqueadero es requerido</div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="pisoId">Piso</label>
                            <select class="form-control" id="pisoId" required>
                                <option value="">Seleccione un piso</option>
                            </select>
                            <div class="invalid-feedback">El piso es requerido</div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="usuarioId">Usuario</label>
                            <select class="form-control" id="usuarioId" required>
                                <option value="">Seleccione un usuario</option>
                            </select>
                            <div class="invalid-feedback">El usuario es requerido</div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="vehiculoId">Vehículo</label>
                            <select class="form-control" id="vehiculoId" required>
                                <option value="">Seleccione un vehículo</option>
                            </select>
                            <div class="invalid-feedback">El vehículo es requerido</div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="placa">Reconocer Placa</label>
                            <div class="input-group">
                                <input type="text" class="form-control" id="placa" readonly>
                                <div class="input-group-append">
                                    <button class="btn btn-outline-secondary" type="button" id="btnAbrirCamara">
                                        <i class="fas fa-camera"></i> Abrir Cámara
                                    </button>
                                </div>
                            </div>
                            <div class="mt-3">
                                <video id="video" width="320" height="240" autoplay playsinline></video>
                                <canvas id="canvas" style="display: none;"></canvas>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="zonaId">Zona</label>
                            <select class="form-control" id="zonaId" required>
                                <option value="">Seleccione una zona</option>
                            </select>
                            <div class="invalid-feedback">La zona es requerida</div>
                        </div>
                    </div>
                    <div class="col-12 mt-3">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save"></i> Guardar
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        let stream;
        let recognitionInterval;
        let isRecognizing = false;
        let vehicleResult;

        const platerecognizerToken = '@ViewBag.PlaterecognizerToken';

        function iniciarReconocimientoPlaca() {
            if (isRecognizing) return;
            isRecognizing = true;

            recognitionInterval = setInterval(async () => {
                const video = document.getElementById('video');
                if (video.readyState === video.HAVE_ENOUGH_DATA) {
                    const canvas = document.getElementById('canvas');
                    const ctx = canvas.getContext('2d');
                    
                    // Capturar frame de video
                    canvas.width = video.videoWidth;
                    canvas.height = video.videoHeight;
                    ctx.drawImage(video, 0, 0, canvas.width, canvas.height);
                    
                    // Convertir a base64
                    const imageData = canvas.toDataURL('image/jpeg', 0.5);
                    let body = new FormData();
                    body.append('upload', imageData);
                    body.append("regions", "co");
                    
                    try {
                        const response = await fetch('https://api.platerecognizer.com/v1/plate-reader/', {
                            method: 'POST',
                            headers: {
                                'Authorization': 'Token ' + platerecognizerToken,
                            },
                            body: body
                        });
                        
                        const data = await response.json();
                        
                        if (data.results && data.results.length > 0) {
                            const placa = data.results[0].plate.toUpperCase();
                            
                            const inputPlaca = document.getElementById('placa');
                            inputPlaca.value = placa;

                            // Buscar vehículo por placa
                            buscarVehiculoPorPlaca(placa);
                            
                            // Detener reconocimiento y liberar cámara
                            detenerReconocimientoPlaca();
                        }
                    } catch (error) {
                        console.error('Error en el reconocimiento:', error);
                    }
                }
            }, 2000); 
        }

        function detenerReconocimientoPlaca() {
            isRecognizing = false;
            if (recognitionInterval) {
                clearInterval(recognitionInterval);
                recognitionInterval = null;
            }
            if (stream) {
                stream.getTracks().forEach(track => track.stop());
                stream = null;
            }
            const video = document.getElementById('video');
            video.srcObject = null;
            const canvas = document.getElementById('canvas');
            canvas.width = 0;
            canvas.height = 0;
        }

        function buscarVehiculoPorPlaca(placa) {
            $.get(`/api/Vehiculos/placa/${placa}`)
                .done(function(vehiculo) {
                    if (vehiculo) {
                        vehicleResult = vehiculo;
                        $('#usuarioId').val(vehiculo.usuarioId);
                        $('#usuarioId').trigger('change');
                    } else {
                        Swal.fire({
                            icon: 'warning',
                            title: 'Vehículo no encontrado',
                            text: 'No se encontró un vehículo registrado con esta placa'
                        });
                    }
                });
        }

        $("#btnAbrirCamara").on("click", function() {
            if (!stream) {
                navigator.mediaDevices.getUserMedia({ video: true })
                    .then(function(s) {
                        stream = s;
                        const video = document.getElementById('video');
                        video.srcObject = stream;
                        video.play();
                        iniciarReconocimientoPlaca();
                    })
                    .catch(function(error) {
                        console.error('Error al acceder a la cámara:', error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'No se pudo acceder a la cámara: ' + error.message
                        });
                    });
            } else {
                detenerReconocimientoPlaca();
            }
        })

        $(document).ready(function() {
            // Cargar parqueaderos
            $.get('/api/Parqueaderos')
                .done(function(parqueaderos) {
                    const select = $('#parqueaderoId');
                    select.empty();
                    select.append('<option value="">Seleccione un parqueadero</option>');
                    parqueaderos.forEach(function(parqueadero) {
                        select.append(`<option value="${parqueadero.id}">${parqueadero.nombre}</option>`);
                    });
                });

            $('#parqueaderoId').on('change', function() {
                const parqueaderoId = $(this).val();
                $.get(`/api/Pisos/${parqueaderoId}`)
                    .done(function(pisos) {
                        const select = $('#pisoId');
                        select.empty();
                        select.append('<option value="">Seleccione un piso</option>');
                        pisos.forEach(function(piso) {
                            select.append(`<option value="${piso.id}">Piso ${piso.numero}</option>`);
                        });
                    });
            });

            $('#pisoId').on('change', function() {
                const pisoId = $(this).val();
                const placa = $('#vehiculoId').val();
                if (placa) {
                    $.get(`/api/Zonas/TipoVehiculo/${placa}/Piso/${pisoId}`)
                        .done(function(zonas) {
                            const select = $('#zonaId');
                            select.empty();
                            select.append('<option value="">Seleccione una zona</option>');
                            zonas.forEach(function(zona) {
                            select.append(`<option value="${zona.id}">${zona.nombre}</option>`);
                        });
                    });
                }
            });

            $('#usuarioId').on('change', function() {
                const usuarioId = $(this).val();
                $.get(`/api/Vehiculos/usuario/${usuarioId}`)
                    .done(function(vehiculos) {
                        const select = $('#vehiculoId');
                        select.empty();
                        select.append('<option value="">Seleccione un vehículo</option>');
                        vehiculos.forEach(function(vehiculo) {
                            select.append(`<option value="${vehiculo.placa}">${vehiculo.placa}</option>`);
                        });
                        if(vehicleResult) {
                            $('#vehiculoId').val(vehicleResult.placa);
                            $('#vehiculoId').trigger('change');
                            vehicleResult = null;
                        }
                    });
            });

            $('#vehiculoId').on('change', function() {
                const vehiculoId = $(this).val();
                const pisoId = $('#pisoId').val();
                if (pisoId) {
                    $.get(`/api/Zonas/TipoVehiculo/${vehiculoId}/Piso/${pisoId}`)
                        .done(function(zonas) {
                            const select = $('#zonaId');
                            select.empty();
                            select.append('<option value="">Seleccione una zona</option>');
                        zonas.forEach(function(zona) {
                            select.append(`<option value="${zona.id}">${zona.nombre}</option>`);
                        });
                    });
                }
            });

            // Cargar usuarios
            $.get('/api/Usuarios')
                .done(function(usuarios) {
                    const select = $('#usuarioId');
                    select.empty();
                    select.append('<option value="">Seleccione un usuario</option>');
                    usuarios.forEach(function(usuario) {
                        select.append(`<option value="${usuario.id}">${usuario.nombre}</option>`);
                    });
                });


            $('#formCrearReserva').on('submit', function(e) {
                e.preventDefault();

                if (this.checkValidity() === false) {
                    e.stopPropagation();
                    $(this).addClass('was-validated');
                    return;
                }

                const placa = $('#vehiculoId').val();
                $.get(`/api/Vehiculos/placa/${placa}`)
                    .done(function(vehiculo) {
                        if (vehiculo == null) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: 'No se encontró el vehículo.'
                            });
                            return;
                        }

                        const reservaData = {
                            vehiculoId: vehiculo.id,
                            usuarioId: parseInt($('#usuarioId').val()),
                            zonaId: parseInt($('#zonaId').val())
                        };

                        $.ajax({
                            url: '/api/Reservas',
                            type: 'POST',
                            contentType: 'application/json',
                            data: JSON.stringify(reservaData),
                            success: function(response) {
                                Swal.fire({
                                    icon: 'success',
                                    title: '¡Éxito!',
                                    text: 'La reserva ha sido creada correctamente',
                                    showConfirmButton: false,
                                    timer: 1500
                                }).then(() => {
                                    window.location.href = '/Reserva/Index';
                                });
                            },
                            error: function(xhr) {
                                let errorMessage = 'Ocurrió un error al crear la reserva';
                                if (xhr.responseJSON && xhr.responseJSON.mensaje) {
                                    errorMessage = xhr.responseJSON.mensaje;
                                }
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: errorMessage
                                });
                            }
                        });
                    });
                });

        });
    </script>
}
