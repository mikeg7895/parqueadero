@{
    ViewData["Title"] = "Usuarios";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3 text-gray-800">Usuarios</h1>
        <div>
            <a asp-action="Crear" class="btn btn-primary me-2">
                <i class="fas fa-plus"></i> Nuevo Usuario
            </a>
            <a asp-controller="Dashboard" asp-action="Index" class="btn btn-secondary">
                <i class="fas fa-arrow-left"></i> Volver
            </a>
        </div>
    </div>

    <div class="card shadow mb-4">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered" id="usuariosTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>Nombre</th>
                            <th>Correo</th>
                            <th>Rol</th>
                            @if (User.IsInRole("SuperUsuario")){
                                <th>Empresa</th>
                            }
                            <th>Plan Especial</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>

    <!-- Modal para asignar planes especiales -->
    <div class="modal fade" id="asignarPlanModal" tabindex="-1" aria-labelledby="asignarPlanModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="asignarPlanModalLabel">Asignar Plan Especial</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="cargandoPlanes" class="text-center mb-3" style="display: none;">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Cargando...</span>
                        </div>
                    </div>
                    <div id="listaPlanes">
                        <p>Seleccione un plan especial:</p>
                        <select class="form-select" id="planEspecialId">
                            <option value="">Seleccione un plan</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-primary" id="btnAsignarPlan">Asignar Plan</button>
                </div>
            </div>
        </div>
    </div>

@section Scripts {
    <script>
        let usuarioIdSeleccionado = null;

        // Evento al abrir el modal
        document.getElementById('asignarPlanModal').addEventListener('show.bs.modal', function (event) {
            const button = event.relatedTarget;
            usuarioIdSeleccionado = button.getAttribute('data-usuario-id');
            
            // Mostrar spinner y cargar planes
            document.getElementById('cargandoPlanes').style.display = 'block';
            document.getElementById('listaPlanes').style.display = 'none';
            // Cargar planes especiales
            fetch('/api/PlanesEspeciales')
                .then(response => response.json())
                .then(planes => {
                    const select = document.getElementById('planEspecialId');
                    select.innerHTML = '<option value="">Seleccione un plan</option>';
                    planes.forEach(plan => {
                        const option = document.createElement('option');
                        option.value = plan.id;
                        option.textContent = `${plan.nombre} - $${plan.costo}`;
                        select.appendChild(option);
                    });
                    
                    // Ocultar spinner y mostrar lista
                    document.getElementById('cargandoPlanes').style.display = 'none';
                    document.getElementById('listaPlanes').style.display = 'block';
                })
                .catch(error => {
                    console.error('Error al cargar los planes:', error);
                    alert('Error al cargar los planes especiales');
                });
        });

        // Evento para asignar plan
        document.getElementById('btnAsignarPlan').addEventListener('click', function() {
            const planId = document.getElementById('planEspecialId').value;
            if (!planId) {
                alert('Por favor seleccione un plan especial');
                return;
            }

            // Hacer la petición para asignar el plan
            fetch(`/api/Usuarios/${usuarioIdSeleccionado}/PlanEspecial/${planId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Error al asignar el plan');
                }
                Swal.fire({
                    title: 'Éxito',
                    text: 'Plan especial asignado correctamente',
                    icon: 'success',
                    confirmButtonText: 'OK'
                });
                $('#asignarPlanModal').modal('hide');
                $('#usuariosTable').DataTable().ajax.reload();
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error al asignar el plan especial');
            });
        });

        $(document).ready(function () {
            var isSuperUsuario = @Json.Serialize(User.IsInRole("SuperUsuario"));
            var columns = [
                { data: 'nombre' },
                { data: 'correo' },
                { 
                    data: 'rol',
                    render: function (data) {
                        const roles = {
                            0: 'SuperAdmin',
                            1: 'Admin',
                            2: 'Trabajador',
                            3: 'Cliente'
                        };
                        return roles[data] || 'Desconocido';
                    }
                },
            ];

            if (isSuperUsuario) {
                columns.push({ data: 'empresa.nombre' });
            }

            columns.push({ data: 'planEspecial.nombre' });
            columns.push({
                data: 'id',
                render: function (data, type, row) {
                    return `
                        <div class="btn-group" role="group">
                            <a href="/Usuario/Editar/${data}" class="btn btn-info btn-sm">
                                <i class="fas fa-edit"></i>
                            </a>
                            <a href="/Usuario/Eliminar/${data}" class="btn btn-danger btn-sm">
                                <i class="fas fa-trash"></i>
                            </a>
                            ${ row.planEspecialId ?
                            `<button type="button" class="btn btn-danger btn-sm btnDesasignarPlan" data-usuario-id="${data}" onclick="desasignarPlan(${data})">
                                <i class="fas fa-tags"></i>
                            </button>` 
                            : 
                            `<button type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#asignarPlanModal" data-usuario-id="${data}">
                                <i class="fas fa-tags"></i>
                            </button>`}
                        </div>
                    `;
                }
            });

            $('#usuariosTable').DataTable({
                ajax: {
                    url: '/api/Usuarios',
                    dataSrc: ''
                },
                columns: columns,
                language: {
                    url: '//cdn.datatables.net/plug-ins/1.13.7/i18n/es-ES.json'
                }
            });

        });

        function desasignarPlan(usuarioId) {
            Swal.fire({
                title: '¿Estás seguro?',
                text: 'Esta acción no se puede deshacer',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Sí, desasignar',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/api/Usuarios/${usuarioId}/PlanEspecial/0`, {
                        method: 'POST'
                    })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Error al desasignar el plan');
                        }
                        Swal.fire({
                            title: 'Éxito',
                            text: 'Plan especial desasignado correctamente',
                            icon: 'success',
                            confirmButtonText: 'OK'
                        });
                        $('#usuariosTable').DataTable().ajax.reload();
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('Error al desasignar el plan especial');
                    });
                }
            })
        }
    </script>
}